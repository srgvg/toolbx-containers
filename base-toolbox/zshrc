# source /usr/share/zsh-antigen/antigen.zsh
source /opt/config/zsh/.antigen/antigen.zsh

# Load the oh-my-zsh library
antigen use oh-my-zsh

# Bundles from the default repo (robbyrussell's oh-my-zsh).
antigen bundle git
antigen bundle pip
antigen bundle command-not-found
antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle zsh-users/zsh-autosuggestions
antigen bundle zsh-users/zsh-completions
antigen bundle fzf

# Tell Antigen that you're done.
antigen apply

# PATH
export PATH="/opt/bin:$PATH"
export GOROOT=/usr/local/go
export GOPATH=/opt/go
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin:$HOME/.local/bin:${KREW_ROOT:-$HOME/.krew}/bin

# -- Aliases ---------------------------------------
source /opt/config/zsh_aliases

alias dpg='cd ~/customers/dpg'
alias zoolite='cd ~/zoolite'
alias gi='~/.local/bin/grv'
alias aws-instances="aws ec2 describe-instances | jq -r '.Reservations[].Instances[] | .Tags[]|select(.Key=="Name")|.Value'"

# -- ssh-agent ----------------------------------------------------------------
SSH_ENV="$HOME/.ssh/environment"

function start_agent {
    echo "Initialising new SSH agent..."
    /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
    echo succeeded
    chmod 600 "${SSH_ENV}"
    . "${SSH_ENV}" > /dev/null
    /usr/bin/ssh-add;
}

# Source SSH settings, if applicable
if [ -f "${SSH_ENV}" ]; then
    . "${SSH_ENV}" > /dev/null
    ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
        start_agent;
    }
else
    start_agent;
fi

# --  AWS ---------------------------------------------------------------------
# Update prompt with AWS Profile
#function aws_prof {
#  local profile="${AWS_PROFILE}"
#
#  if [[ -z "${profile}" ]]
#  then echo ""
#  else echo "%{$fg_bold[blue]%}aws:(%{$fg[yellow]%}${profile}%{$fg_bold[blue]%})%{$reset_color%} "
#  fi
#}
#PROMPT='$(aws_prof)'

# -- Fuzzy finder --------------------------------------------------------------
export FZF_DEFAULT_COMMAND='rg --files --hidden -g "!.git" ' 

# -- Initialize starship prompt
eval "$(starship init zsh)"

## BEGIN NVM Block
#export NVM_DIR="$HOME/.nvm"
#[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
#export PATH=$PATH:$(yarn global bin) # needed for coc diagnostics-languageserver
## END NVM Block
